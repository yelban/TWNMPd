server {
    listen       8000;
    server_name  localhost;

    resolver     127.0.0.11;
    # *1 no resolver defined to resolve ab10_apache, client: 172.23.0.3, server: localhost, request: "GET /123 HTTP/1.1", host: "nginx.docker.localhost"
    # proxy_pass http://ab10_apache:9000$request_uri;
    # ping ab10_apache is okey
    # nginx could not resolve ab10_apache ip
    # cat /etc/resolv.conf
    # nameserver 127.0.0.11
    # http://www.nginx-discovery.com/2011/05/day-51-proxypass-and-resolver.html

    #charset utf-8;
    #access_log  /var/log/nginx/host.access.log  main;

    root    /var/www/html/web;
    index   index.html index.php;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # An AJAX HTTP error occurred.
    rewrite ^/core/authorize.php/core/authorize.php(.*)$ /core/authorize.php$1;

    location ~ \..*/.*\.php$ {
        return 403;
    }

    # Block access to hidden directories
    location ~ (^|/)\. {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # No php is touched for static content
    location / {
        # root   /var/www/html;
        # index  index.html index.htm index.php;
        try_files $uri /index.html /index.php?$query_string; # For Drupal >= 7
    }

    #error_page  404              /404.html;

    # # redirect server error pages to the static page /50x.html
    # #
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #     root   /var/www/html;
    # }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # Clean URLs
    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    # In Drupal 8, we must also match new paths where the '.php' appears in
    # the middle, such as update.php/selection. The rule we use is strict,
    # and only allows this pattern with the update.php front controller.
    # This allows legacy path aliases in the form of
    # blog/index.php/legacy-path to continue to route to Drupal nodes. If
    # you do not have any paths like that, then you might prefer to use a
    # laxer rule, such as:
    #   location ~ \.php(/|$) {
    # The laxer rule will continue to work if Drupal uses this new URL
    # pattern with front controllers other than update.php in a future
    # release.
    location ~ '\.php$|^/update.php' {
        # root           /var/www/html;
        # fastcgi_index  index.php;
        # try_files $uri =404;

        #########################
        ##### nginx 處理 pathinfo
        # fastcgi_split_path_info ^(.+\.php)(.*)$;
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        ## 增加 fastcgi_split_path_info指令，將 URI 匹配成 PHP 腳本的 URI 和 pathinfo 兩個變量 ($fastcgi_script_name, $fastcgi_path_info)
        ## Security note: If you're running a version of PHP older than the
        ## latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        ## See http://serverfault.com/q/627903/94922 for details.

        fastcgi_param PATH_INFO $fastcgi_path_info;
        # set $path_info $fastcgi_path_info;
        # fastcgi_param PATH_INFO $path_info if_not_empty;
        ## PHP 中要能讀取到 pathinfo 這個變量
        ## 要通過 fastcgi_param 指令將 fastcgi_split_path_info 指令匹配到的 pathinfo 部分賦值給 PATH_INFO
        ## $_SERVER['PATH_INFO']才會存在值
        #####
        #########################

        # #########################
        # ##### php 處理 pathinfo
        # fastcgi_param PATH_INFO $fastcgi_script_name;
        # ## 同時將完整的URI賦值給PATH_INFO，此處賦的值可能是/index.php/Index/index形式
        # ## 搭配 php.ini 設置 cgi.fix_pathinfo=1
        # ## alpine php 7.2 cgi.fix_pathinfo=0 也有效
        # #####
        # #########################

        include        fastcgi_params;

        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";

        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        ## 直接將網站根目錄和完整的URI拼接起來後賦值給 SCRIPT_FILENAME
        ## 實際上此處賦值給 SCRIPT_FILENAME 的 PHP script 可能並不存在
        ## 此處賦的值可能是 /var/www/nginx.docker.localhost/index.php/Index/index 形式

        # fastcgi_param QUERY_STRING $query_string;
        ## $_SERVER['QUERY_STRING'] exit withour QUERY_STRING declaration.

        fastcgi_intercept_errors on;

        # # PHP 5 socket location.
        # # fastcgi_pass unix:/var/run/php5-fpm.sock;
        # # PHP 7 socket location.
        # fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;

        fastcgi_pass    host.docker.internal:9000;

        # add_header      NginX "Proxied php";
    }

    # Image styles
    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
        ## /sites/abc/files/styles/123?str=1000
        ## $_SERVER['QUERY_STRING'] = q=sites/abc/files/styles/123&str=1000
        ##
        ## /sites3/abc/files/styles/123?str=1000
        ## $_SERVER['QUERY_STRING'] = str=1000

        # add_header  NginX "Proxied styles";
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|rar|zip|7z|gz|txt|flv|mp3|wma|avi|mov|mkv|mp4|doc|ppt|pdf|xls)$ {
        try_files $uri @rewrite;
        expires 15d;
        log_not_found off;
        # add_header  NginX "Proxied statics";
    }
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
